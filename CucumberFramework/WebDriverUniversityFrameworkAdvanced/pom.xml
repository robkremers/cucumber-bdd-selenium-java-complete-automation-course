<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.webDriverUniversityFramework</groupId>
  <artifactId>WebDriverUniversityFrameworkAdvanced</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>WebDriverUniversityFrameworkAdvanced</name>
  <url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
		<junit.version>4.12</junit.version>
		<selenium.version>3.141.59</selenium.version>
		<surefire.version>2.22.1</surefire.version>
		<cucumber.main.version>4.2.6</cucumber.main.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>
				
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-jvm -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-jvm</artifactId>
		    <version>${cucumber.main.version}</version>
		    <type>pom</type>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-junit</artifactId>
		    <version>${cucumber.main.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-core -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-core</artifactId>
		    <version>${cucumber.main.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-html -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-html</artifactId>
		    <version>0.2.7</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>${cucumber.main.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-jvm-deps -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-jvm-deps</artifactId>
		    <version>1.0.6</version>
		    <scope>provided</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/gherkin -->
		<!-- 
		Adding this dependency results in:
		Exception in thread "main" java.lang.NoClassDefFoundError: gherkin/IGherkinDialectProvider
		So leave it out (unless it works for you).
		 -->
		<!-- <dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>gherkin</artifactId>
		    <version>6.0.17</version>
		</dependency> -->
		
		<!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all -->
		<dependency>
		    <groupId>org.hamcrest</groupId>
		    <artifactId>hamcrest-all</artifactId>
		    <version>1.3</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-picocontainer -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-picocontainer</artifactId>
		    <version>${cucumber.main.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- 
		https://maven.apache.org/surefire/maven-surefire-plugin/examples/testng.html
		In order to ensure that the plugin maven-surefire-plugin works correctly 
		with the configuration file testng.xml.
		 -->
		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
		    <groupId>org.testng</groupId>
		    <artifactId>testng</artifactId>
		    <version>6.14.3</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-testng</artifactId>
		    <version>${cucumber.main.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.vimalselvam/cucumber-extentsreport -->
		<!-- 
			https://www.toolsqa.com/selenium-cucumber-framework/cucumber-extent-report/
			If using this the com.aventstack libraries below are required.
		 -->
		<dependency>
		    <groupId>com.vimalselvam</groupId>
		    <artifactId>cucumber-extentsreport</artifactId>
		    <version>3.1.1</version>
		</dependency>
				
		<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->
		<dependency>
		    <groupId>com.aventstack</groupId>
		    <artifactId>extentreports</artifactId>
		    <version>4.0.9</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports-testng-adapter -->
		<dependency>
		    <groupId>com.aventstack</groupId>
		    <artifactId>extentreports-testng-adapter</artifactId>
		    <version>1.0.3</version>
		</dependency>

		
		<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports-cucumber4-adapter -->
		<dependency>
		    <groupId>com.aventstack</groupId>
		    <artifactId>extentreports-cucumber4-adapter</artifactId>
		    <version>1.0.1</version>
		</dependency>

		
		<!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
		<dependency>
		    <groupId>org.freemarker</groupId>
		    <artifactId>freemarker</artifactId>
		    <version>2.3.28</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/net.masterthought/maven-cucumber-reporting -->
		<dependency>
		    <groupId>net.masterthought</groupId>
		    <artifactId>maven-cucumber-reporting</artifactId>
		    <version>4.5.0</version>
		</dependency>
		
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire.version}</version>
			</plugin>
		</plugins>
	</reporting>
	
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<!-- runs the compile process in the background -->
						<fork>true</fork>
						<!-- specified if fork == true -->
						<executable>${env.JAVA_HOME}/bin/javac</executable>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.version}</version>
					<!-- 
					    The reason for using TestNG is, according to the author of the course:
					    - ability to run multiple Runner classes.
					    - Reporting facilities.
					    The configuration file testng.xml needs to be uncommented once there is 
						something to configure.
						The file points to one or more runner classes. 
						If the file is just a basic xml file without configuration 
						information an error will occur: org.xml.sax.SAXParseException; lineNumber: 
						1; columnNumber: 39; Premature end of file. 
						For a correct setup: 
						- https://www.journaldev.com/21326/testng-maven-surefire-plugin-configurations 
						- https://www.journaldev.com/21304/testng-xml 
					-->
					<!-- 
						Instead of using testng as done by the author it is also possible to just use
						the surefire functionality. In this way also multiple Runner classes can be executed.
						- https://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html
						This works fine.
						$ mvn test <enter>
						(Commented out the testng.xml file)
					 -->
					<configuration>
						<suiteXmlFiles>
							<!-- <suiteXmlFile>testng.xml</suiteXmlFile> -->
						</suiteXmlFiles>
						<testErrorIgnore>false</testErrorIgnore>
						<testFailureIgnore>false</testFailureIgnore>
						<includes>
							<include>MainRunner.java</include>
						</includes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
